----

Emitter/Listener

On va surement supprimer EventEmiter
On va juste garder EventListener qu'on va modifier pour que toggle
appelle addeventListener et removeEventListener
et doérénavant tous les events qu'on veut ajouter ou enlever on doit
passer par eventListener

genre NS.EventListener.new(window, {
	'mousedown': function(){

	}
});

----

Tree Structure

NodeList = {
	constructor: function(node){
		this.node = node;
	},

	item: function(index){
		var node = this.node.firstChild;

		while(index--){
			node = node.nextSibling;
		}

		return node;
	},

	getLength: function(){
		var child = this.node.firstChild;

		while(child){
			this[length] = child;
			child = child.nextSibling;
			length++;
		}

		return length;
	}
};

Object.defineProperty(NodeList, 'length', NodeList.getLength());

Element.prototype = {
	// principalement:
	children:
	firstElementChild: // et autres
	innerHTML:
	classList:
};

Node.prototype = {
	// properties:
	previousSibling:
	firstChild:
	lastChild:
	nextSibling:
	childNodes:
	parentNode:
	attributes:
	// and others

	//methods
	removeChild:
	insertBefore:
	hasChildNodes:
	cloneNode:
	contains:
	compareDocumentPosition:
	appendChild:
	replaceChild:
	removeChild:
	// and others
}

EventTargetPrototype = {
	// methods
	addEventListener:
	removeEventListener:
	dispatchEvent:
}

