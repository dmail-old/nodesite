var Renderer = {
	stringify: String,

	reduce: function(strings, values, fn, bind, buffer){
		var i = 0, j = values.length, string, value;

		while(i<j){
			value = this.stringify(values[i]);
			string = strings[i + 1];
			buffer = fn.call(bind, buffer, value, string, i);
			i++;
		}

		return buffer;
	},

	stringReducer: function(prev, value, string){
		return prev + value + string;
	},

	arrayReducer: function(prev, value, string){
		prev.push(value, string);
		return prev;
	},

	renderAsString: function(strings, values){
		return this.reduce(strings, values, this.stringReducer, this, strings[0]);
	},

	renderAsArray: function(strings, values){
		return this.reduce(strings, values, this.arrayReducer, this, [strings[0]]);
	}
};

module.exports = Renderer;