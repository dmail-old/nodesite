/*
*/
var FilteredIterator = require('./FilteredIterator');
var proto = require('proto');
var FilteredIterable = proto.create({
	iterable: null,
	filter: null,
	bind: null,

	constructor: function(iterable, filter, bind){
		this.iterable = iterable;
		this.filter = filter;
		this.bind = bind;
	},

	count: function(){
		return Array.from(this).length;
	},

	toString: function(){
		return '[object Filter Iterable]';
	}
});

FilteredIterable.prototype[Symbol.iterator] = function(){
	return new FilteredIterator(this.iterable[Symbol.iterator](), this.filter, this.bind, 'value');
};

module.exports = FilteredIterable;