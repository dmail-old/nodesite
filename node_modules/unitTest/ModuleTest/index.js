/*

*/

var TestSerie = require('../TestSerie');

var ModuleTest = TestSerie.create({
	type: 'module',
	Test: require('../TestFile'),
	Collector: require('./TestFileCollector'),
	FileObserver: require('FileObserver'),
	path: null, // path of the module

	init: function(path){
		this.path = path;
		this.testPaths = this.Collector.collect(path);
		TestSerie.init.call(this, this.createTestList());

		if( this.testPaths.length ){
			this.clearCache();
			this.setModule(this.load(path));
		}
	},

	createTestList: function(){
		return this.testPaths.map(this.createTest, this);
	},

	setModule: function(module){
		this.level = this.getDependencyLevel(module);
		TestSerie.setModule.call(this, module);
	},

	getDependencyLevel: function(module){
		var level = 0, children = module.children, i = 0, j = children.length, child, childLevel;

		if( j ){
			for(;i<j;i++){
				child = children[i];
				childLevel = this.dependencyLevel(child);
				level = Math.max(level, childLevel);
			}

			level++;
		}

		return level;
	},

	clearCache: function(){
		for(var key in require.cache){
			delete require.cache[key];
		}
	},

	load: function(path){
		require(path);
		return require.cache[this.path];
	},

	unload: function(path){
		this.clearCache();
	},

	reload: function(){
		this.unload(this.path);
		this.setModule(this.load(this.path));		
	},

	onChange: function(path){
		var index = this.testPaths.indexOf(path), test;

		if( index === -1 ){
			test = this;			
		}
		else{
			test = this.tests[index];
		}

		this.changeFn.call(this.changeBind, test);
	},

	observe: function(fn, bind){
		this.changeFn = fn;
		this.changeBind = bind;

		require('fs.extra').collectFileSync(this.path).forEach(function(file){
			this.FileObserver.observe(file, this.onChange, this);
		}, this);
	}
});

module.exports = ModuleTest;