/*


*/

var TestSerie = require('../TestSerie');
var TestRunner = TestSerie.create({
	path: null, // path of a folder/module to test
	ModuleLoader: require('./TestLoader/ModuleLoader'),
	ModuleTestsLoader: require('./TestLoader/TestLoader'),

	init: function(path){
		this.path = path;
	},

	checkBadSignature: function(){
		var badSignaturePaths = this.ModuleLoader.badSignaturePaths;

		if( badSignaturePaths && badSignaturePaths.length ){
			badSignaturePaths.filter(this.ModuleTestsLoader.filterFolder, this.ModuleTestsLoader);
			if( badSignaturePaths.length ) this.emit('badSignature', badSignaturePaths);
		}
	},

	loadTests: function(){
		var ModuleLoader = this.ModuleLoader;
		var modulePaths = ModuleLoader.load(this.path);

		this.checkBadSignature();

		var ModuleTestsLoader = this.ModuleTestsLoader;

		var i = 0, j = modulePaths.length, modulePath, testPaths, moduleTest, tests = [];

		for(;i<j;i++){
			modulePath = modulePaths[i];
			testPaths = ModuleTestsLoader.load(modulePath);
			if( testPaths && testPaths.length ){
				moduleTest = this.createModuleTest(modulePath, testPaths);
				tests.push(moduleTest);
			}
		}

		return [];
		//return tests.sort(this.moduleTestComparer);
	}
});

var TestSerie = require('./TestSerie');

var AppTest = TestSerie.create({
	type: 'appTest',
	ModuleLoader: require('./ModuleLoader'),
	
	ModuleTest: require('./ModuleTest'),
	fileSystem: require('fs'),
	isWatching: false,
	listener: null,

	init: function(path){
		this.path = path;
		this.badSignaturePaths = [];
	},

	setupModule: function(){},
	teardownModule: function(){},

	createModuleTest: function(path, testPaths){
		return this.ModuleTest.new(path, testPaths);
	},

	moduleTestComparer: function(moduleA, moduleB){
		return moduleA.level - moduleB.level;
		//return moduleA.getDependencyLevel() - moduleB.getDependencyLevel();
	},

	// moduleTest are created by loadTests to be able to sort them by dependency
	createTest: function(moduleTest){
		return moduleTest;
	}
});

module.exports = AppTest;