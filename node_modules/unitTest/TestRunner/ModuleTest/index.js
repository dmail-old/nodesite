/*

*/

var TestSerie = require('../TestSerie');

var ModuleTest = TestSerie.create({
	Test: require('../ModuleTestFile'),
	path: null, // path of the module
	testPaths: null,

	init: function(path){
		this.path = path;
	},

	addAll: function(testPaths){

	},

	getDependencyLevel: function(){
		
		function dependencyLevel(module){
			var level = 0, children = module.children, i = 0, j = children.length, child, childLevel;

			if( j ){
				for(;i<j;i++){
					child = children[i];
					childLevel = dependencyLevel(child);
					level = Math.max(level, childLevel);
				}

				level++;
			}

			return level;
		}

		return dependencyLevel(this.module);		
	},

	load: function(path){
		require(path);
		return require.cache[this.path];
	},

	clearCache: function(){
		for(var key in require.cache){
			delete require.cache[key];
		}
	},

	unload: function(path){
		this.clearCache();
	},

	reload: function(){
		this.unload(this.path);
		this.module = this.load(this.path);
		this.level = this.getDependencyLevel();
		this.tests.forEach(function(moduleTestFile){
			moduleTestFile.setModule(this.module);
		}, this);
	},

	// don't watch testFiles
	watchFilter: function(path){
		return this.testPaths.indexOf(path) === -1;
	}
});

module.exports = ModuleTest;