var proto = require('proto');
var forOf = require('for-of');
var Task = require('./task');
require('task/complete');

function pipe(iterable, bind, initialValue){
	var task = Task.complete(initialValue);
	task.name = 'initial';

	forOf(iterable, function(fn){
		task = task.join(fn, null, bind);
	});

	return task;

	/*
	var pipedTask = new Task('pipedTask'), task, next, previous = initialValue;

	forOf(iterable, function(fn){
		task = new Task();

		task.name = fn.name;
		task.onCompletion = fn;
		task.bind = bind;

		// each task complete to the previous one, the first task complete to the initialValue
		task.complete(previous);
		previous = task;
	});

	pipedTask.complete(task); // piped complete to the last task

	return pipedTask;
	*/
}

module.exports = pipe;
Task.pipe = pipe;