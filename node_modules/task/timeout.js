var Task = require('./task');

// The `timeout` method will automatically fails a task if it takes longer than a given delay in miliseconds.
Task.prototype.timeout = function(ms){
	var timer = setTimeout(function(){
		var error = new Error('task too slow (more than '+ ms +' ms');
		error.code = 'TASK_TIMEOUT';

		this.fail(error);
	}.bind(this));

	// clean timer (wrap function in case task is a delayed task, see delay.js)
	var clean = this.clean;
	this.clean = function(){
		clearTimeout(timer);
		return clean.call(this);
	};

	return this;
};

function timeout(ms, value){
	return Task.complete(value).timeout(ms);
}

module.exports = timeout;
Task.timeout = timeout;