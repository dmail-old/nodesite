exports['thenable called on resolve but not on reject'] = function(test, Task){
	var resolvedTask = Task.resolve('ok');

	test.willResolve(Task.resolve(resolvedTask).then(function(value){
		test.equal(value, 'ok');
	}));
	test.willResolve(Task.reject(resolvedTask).catch(function(value){
		test.equal(value, resolvedTask);
	}));
};

exports['unhandled rejection emitted'] = function(test, Task){
	var task = new Task(function(resolve, reject){
		process.once('unhandledRejection', function(value, task){
			resolve(value);
		});
	});

	var rejectValue = {};
	Task.reject(rejectValue);

	test.willResolve(task.then(function(value){
		test.equal(value, rejectValue);
	}));
};