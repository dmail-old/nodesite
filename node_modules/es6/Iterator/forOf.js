require('../Symbol');
module.exports = function(iterable, fn, bind){
	var iterator, next;

	if( typeof iterable[Symbol.iterator] !== 'function' ){
		throw new TypeError(iterable + 'is not a iterable');
	}
	
	if( typeof fn != 'function' ){
		throw new TypeError('second argument must be a function');
	}
	
	iterator = iterable[Symbol.iterator]();
	next = iterator.next();
	while( next.done === false ){
		if( fn.call(bind, next.value) === true ) break;
		next = iterator.next();
	}
	
	return this;
};
