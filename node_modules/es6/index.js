var es6 = {
	Symbol: require('./Symbol'),
	Iterator: require('./Iterator'),
	forOf: require('./Iterator/forOf'),
	ArrayIterator: require('./Iterator/ArrayIterator'),
	StringIterator: require('./Iterator/StringIterator'),
	ObjectIterator: require('./Iterator/ObjectIterator'),
	indexOf: require('./indexOf'),
	ArrayFrom: require('./Iterator/Array.from'),
	Map: require('./Map'),
	Set: require('./Set')
};

var topLevelScope = typeof window == 'undefined' ? global : window;

es6.Iterator.prototype[Symbol.iterator] = function(){
	return new es6.ObjectIterator(this.iteratedObject, this.keyOnly ? 'key' : 'key+value');
};

if( typeof topLevelScope['Iterator'] == 'undefined' ){	
	topLevelScope.Iterator = es6.Iterator;
}

var property = require('property');
if( !Array.prototype[Symbol.Iterator] ){
	property.implement(Array, String(Symbol.iterator), function(){
		return new es6.ArrayIterator(this, 'value');
	});
}
if( !String.prototype[Symbol.iterator] ){
	property.implement(String, String(Symbol.iterator), function(){
		return new es6.StringIterator(this);
	});
}
// object have no iterator, to iterate over an object use Iterator(object, true) or use Map, Set object
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map

if( !Array.from ){
	Array.from = es6.ArrayFrom;
}

module.exports = es6;