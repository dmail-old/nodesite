var Logger = require('./logger');

// https://github.com/visionmedia/callsite/blob/master/lib/__stack.js
Object.defineProperty(global, '__stack', {
	get: function(){
		var orig = Error.prepareStackTrace;
		Error.prepareStackTrace = function(_, stack){ return stack; };
		var err = new Error();
		Error.captureStackTrace(err, arguments.callee);
		var stack = err.stack;
		Error.prepareStackTrace = orig;
		return stack;
	}
});

var ansi = require('ansi');

ansi.defineStyle('info', {color: 'green'});
ansi.defineStyle('help', {color: 'cyan'});
ansi.defineStyle('warn', {color: 'yellow', font: 'bold'});
ansi.defineStyle('debug', {color: 'grey', font: 'bold'});
ansi.defineStyle('error', {color: 'red', font: 'bold'});

Logger.formatLevel = function(level){
	return this.colorize ? ansi.setStyle(level, level) : level;
};

Logger.format = function(level, message){
	if( level == 'debug' ){
		var call, wrap, fileName, lineNumber, fileContent, lineContent, formattedLevel;

		call = global.__stack[1];
		fileName = call.getFileName();		
		lineNumber = call.getFileNumber();
		fileContent = require('fs').readFileSync(fileName, 'utf8');
		lineContent = fileContent.split('\n')[lineNumber];
		lineContent = lineContent.replace(/\n|\r/, '');

		formattedLevel = this.formatLevel(level);
		message = message.replace(/\n|\r/g, function(match){ return match + formattedLevel; });

		wrap = '';
		wrap+= formattedLevel + '\n';
		wrap+= formattedLevel + lineContent + ' (' + fileName + ':' + lineNumber + ')\n';
		wrap+= formattedLevel + message + '\n';
		wrap+= formattedLevel;

		return wrap;
	}
	else{
		return this.formatLevel(level) + ': ' + message;
	}
};

module.exports = Logger;