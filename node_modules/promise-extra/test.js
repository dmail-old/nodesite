exports['Promise.first'] = function(test){
	test.willBe(Promise.first([
		function(){
			return Promise.reject('first');
		},
		function(){
			return Promise.reject('last');
		}
	]).catch(function(reason){ return reason; }), 'last');

	test.willBe(Promise.first([
		function(){
			return Promise.reject();
		},
		function(){
			return Promise.resolve('ok');
		}
	]), 'ok');

	test.willBe(Promise.first([
		function(){
			return Promise.resolve('first');
		},
		function(){
			return Promise.resolve('last');
		}
	]), 'first');
};

exports['Promise.route'] = function(test){
	test.willBe(Promise.route([
		function(){
			throw new Error('ok');
		},
		function(handler, error){
			return 'foo';
		}
	]), 'foo');
};

exports['Promise.route with Promise.reject'] = function(test){
	test.willBe(Promise.route([
		function(){
			return Promise.reject('foo');
		},
		function(handler, error){
			return error + 'bar';
		}
	]), 'foobar');
};

exports['Promise.route with error in error handler'] = function(test){
	test.willBe(Promise.route([
		function(){
			return Promise.reject('foo');
		},
		function(handler, error){
			throw 'error';
		},
		function(handler, error){
			return 'foo';
		}
	]), 'foo');
};