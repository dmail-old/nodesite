require('@dmail/object/implement');
require('@dmail/object/complement');
require('@dmail/object/polyfill');

String.implement = Object.implement.bind(Object, String);
String.complement = Object.complement.bind(Object, String);

require('string/prototype/pad');
require('string/prototype/repeat');
require('string/prototype/truncate');
require('string/prototype/trim');
require('string/prototype/capitalize');
require('string/prototype/startsWith');

Object.polyfill(String.prototype, {
	endsWith: function(pattern){
		var index = this.length - pattern.length;
		return index >= 0 && this.indexOf(pattern, index) === index;
	},

	contains: function(pattern, index){
		return this.indexOf(pattern, index) !== -1;
	}
});

String.SPACE = ' ';
String.EMPTY = '';

Function.ESCAPE = function(a){ return '\\' + a; };

RegExp.WORD_GLOBAL = /\b[a-z]/g;
RegExp.SPECIAL_GLOBAL = /([-.*+?^${}()|[\]\/\\])/g;
RegExp.BLANK_GLOBAL = /\s+/g;
RegExp.BLANK_TRAILING_GLOBAL = /^\s+|\s+$/g;

String.complement({
	toInt: function(base){
		return parseInt(this, base || 10);
	},

	capitalizeFirst: function(){
		var string = String(this);
		return string.charAt(0).toUpperCase() + string.slice(1);
	},

	escapeRegExp: function(){
		return this.replace(RegExp.SPECIAL_GLOBAL, Function.ESCAPE);
	},

	singleSpace: function(){
		return String(this).replace(RegExp.BLANK_GLOBAL, ' ');
	},

	clean: function(){
		return String.prototype.singleSpace.call(this).trim();
	}
});