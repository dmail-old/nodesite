/*


*/

var TestSerie = require('../TestSerie');
var ModuleTestSerie = TestSerie.create({
	path: null, // path of a folder/module to test
	Test: require('../ModuleTest'),
	Collector: require('./ModuleCollector'),

	init: function(path){
		this.path = path;
		TestSerie.init.call(this);
	},

	checkBadSignature: function(){
		var badSignatureFiles = this.Collector.badSignatureFiles;

		if( badSignatureFiles.length ){
			badSignatureFiles = badSignatureFiles.filter(this.Test.Collector.filterFolder, this.Test.Collector);
			if( badSignatureFiles.length ) this.emit('badSignature', badSignatureFiles);
		}
	},

	testComparer: function(a, b){
		return a.level - b.level;
	},

	createTestList: function(){
		var modulePaths = this.modulePaths, i = 0, j = modulePaths.length, modulePath, moduleTest, tests = [];

		for(;i<j;i++){
			modulePath = modulePaths[i];
			moduleTest = this.createTest(modulePath);
			if( moduleTest.tests.length ){
				tests.push(moduleTest);
			}
		}

		return tests.sort(this.testComparer);
	},

	load: function(fn, bind){
		try{
			var start = new Date().getTime();

			this.modulePaths = this.Collector.collect(this.path);
			this.checkBadSignature();
			this.tests = this.createTestList();

			var end = new Date().getTime();

			this.loadDuration = end - start;

			fn.call(bind);
		}
		catch(e){
			fn.call(bind, e);
		}
	},

	observe: function(fn, bind){
		this.forEach(function(test){
			test.observe(fn, bind);
		});
	}
});

module.exports = ModuleTestSerie;