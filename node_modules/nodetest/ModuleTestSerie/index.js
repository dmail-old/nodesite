/*


*/

var TestSerie = require('../TestSerie');
var ModuleTestSerie = TestSerie.create({
	path: null, // path of a folder/module to test
	Test: require('../ModuleTest'),
	Collector: require('./ModuleCollector'),

	init: function(path){
		TestSerie.init.call(this);
		this.path = path;
		this.name = 'Test for modules in ' + path;
	},

	checkBadSignature: function(){
		var badSignatureFiles = this.Collector.badSignatureFiles;

		if( badSignatureFiles.length ){
			badSignatureFiles = badSignatureFiles.filter(this.Test.Collector.filterFolder, this.Test.Collector);
			if( badSignatureFiles.length ) this.emit('badSignature', badSignatureFiles);
		}
	},

	createTestList: function(){
		return this.modulePaths.map(this.createTest, this);
	},

	testFilter: function(moduleTest){
		return moduleTest.tests && moduleTest.tests.length;
	},

	testComparer: function(a, b){
		return a.level - b.level;
	},

	load: function(fn, bind){
		var error = null;

		try{
			var start = new Date().getTime();

			this.modulePaths = this.Collector.collect(this.path);
			this.checkBadSignature();

			this.tests = this.createTestList();
			this.tests = this.tests.filter(this.testFilter);
			this.tests = this.tests.sort(this.testComparer);

			var end = new Date().getTime();
			var duration = end - start;
			this.loadDuration = duration;
		}
		catch(e){
			error = e;
		}		

		process.nextTick(function(){
			fn.call(bind, error, duration);
		});
	},

	observe: function(fn, bind){
		this.forEach(function(moduleTest){
			moduleTest.observe(fn, bind);
		});
	}
});

module.exports = ModuleTestSerie;