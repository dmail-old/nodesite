/*
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map

https://github.com/eriwen/es6-map-shim/blob/master/es6-map-shim.js
*/

var indexOf = require('array/exactIndexOf');
var forOf = require('forOf');
var MapIterator = require('./MapIterator');
var proto = require('proto');

var Map = proto.create({
	index: -1,

	constructor: function(iterable){
		this._keys = [];
		this._values = [];

		if( iterable ){
			forOf(iterable, function(parts){
				this.set(parts[0], parts[1]);
			}, this);
		}
	},

	get size(){
		return this._keys.length;
	},

	forEach: function(fn, bind){
		var i = 0, values = this._values, keys = this._keys, j = keys.length;

		for(;i<j;i++){
			fn.call(bind, values[i], keys[i], this);
		}
	},

	keys: function(){
		return new MapIterator(this, 'key');
	},

	values: function(){
		return new MapIterator(this, 'value');
	},

	entries: function(){
		return new MapIterator(this, 'key+value');
	},

	has: function(key){
		var index = indexOf(this._keys, key);

		this.index = index;

		return index !== -1;
	},

	set: function(key, value){
		if( this.has(key) ){
			this._values[this.index] = value;
		}
		else{
			this._keys.push(key);
			this._values.push(key);
		}
	},

	get: function(key){
		return this.has(key) ? this._values[this.index] : undefined;
	},

	delete: function(key){
		if( this.has(key) ){
			this._keys.splice(this.index, 1);
			this._values.splice(this.index, 1);
			return true;
		}
		return false;
	},

	clear: function(){
		this._keys.length = this._values.length = 0;
	},

	toString: function(){
		return '[object Map]';
	}
});

Map.prototype[Symbol.toStringTag] = function(){
	return 'Map';
};
Map.prototype[Symbol.iterator] = function(){
	return this.entries();
};

module.exports = Map;
require('object/polyfill')('global', 'Map', Map);