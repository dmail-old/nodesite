/*
---

name: root

description: Affichage en arborescence

...
*/

/* Color & Images */

.root .node>div>.tool{ background-image: url(../img/tree/tool.png); background-repeat: no-repeat; background-position: 0px 50%; }
.root .node>div>.tool:hover{ background-position: -18px 50%; }
.root .node.empty>div>.tool, .root .node.disabled>div>.tool{ background-image: none; }
.root .node.expanded>div>.tool{ background-position: -36px 50%; }
.root .node.expanded>div>.tool:hover{ background-position: -54px 50%; }

.root .node.lighted>div, .root.compact .node.lighted>div>.name{
	border-color: #B3E4F9;
	background: rgba(230, 245, 255, 0.3);
	background-image: -webkit-linear-gradient(rgba(245, 250, 255, 0.3), rgba(230, 245, 255, 0.3));
	background-image:    -moz-linear-gradient(rgba(245, 250, 255, 0.3), rgba(230, 245, 255, 0.3));
	background-image:     -ms-linear-gradient(rgba(245, 250, 255, 0.3), rgba(230, 245, 255, 0.3));
	background-image:      -o-linear-gradient(rgba(245, 250, 255, 0.3), rgba(230, 245, 255, 0.3));
	background-image:         linear-gradient(rgba(245, 250, 255, 0.3), rgba(230, 245, 255, 0.3));
}
.root .node.selected>div, .root.compact .node.selected>div>.name{
	border-color: #d9d9d9;
	background: rgba(230, 230, 230, 0.5);
	background-image: -webkit-linear-gradient(rgba(250, 250, 250, 0.5), rgba(230, 230, 230, 0.5));
	background-image:    -moz-linear-gradient(rgba(250, 250, 250, 0.5), rgba(230, 230, 230, 0.5));
	background-image:     -ms-linear-gradient(rgba(250, 250, 250, 0.5), rgba(230, 230, 230, 0.5));
	background-image:      -o-linear-gradient(rgba(250, 250, 250, 0.5), rgba(230, 230, 230, 0.5));
	background-image:         linear-gradient(rgba(250, 250, 250, 0.5), rgba(230, 230, 230, 0.5));
}
.root:focus .node.selected>div, .root.compact:focus .node.selected>div>.name{
	border-color: #7da2ce;
	background: rgba(193, 219, 252, 0.5);
	background-image: -webkit-linear-gradient(rgba(220, 235, 252, 0.5), rgba(193, 219, 252, 0.5));
	background-image:    -moz-linear-gradient(rgba(220, 235, 252, 0.5), rgba(193, 219, 252, 0.5));
	background-image:     -ms-linear-gradient(rgba(220, 235, 252, 0.5), rgba(193, 219, 252, 0.5));
	background-image:      -o-linear-gradient(rgba(220, 235, 252, 0.5), rgba(193, 219, 252, 0.5));
	background-image:         linear-gradient(rgba(220, 235, 252, 0.5), rgba(193, 219, 252, 0.5));
}
.root:focus .node.focused>div, .root.compact:focus .node.focused>div>.name{ border-color: blue; }
.root:focus .node.actived>div, .root.compact:focus .node.actived>div>.name{
	color: inherit;
	border-color: #ffc651;
	border-top-color: #ffc651;
	border-bottom-color: #ffa952;
	background: #ffe8b6;
	background-image: -webkit-linear-gradient(#ffe8b6, #ffdb8f);
	background-image:    -moz-linear-gradient(#ffe8b6, #ffdb8f);
	background-image:     -ms-linear-gradient(#ffe8b6, #ffdb8f);
	background-image:      -o-linear-gradient(#ffe8b6, #ffdb8f);
	background-image:         linear-gradient(#ffe8b6, #ffdb8f);
}

.root .node.editing>div>input[type="text"]{ border-color: black; }
.root .node.dragover>div{ border-color: #292FEF; }

/** Structure **/

.root{
	line-height: 22px; width: 100%; /*height: 100%;*/
	/*overflow-x: hidden; overflow-y: auto; A noter il est possible d'utiliser scollLeft sur overflow hidden*/
	margin: 0; padding: 10px; overflow: auto;
	/*position: relative;*/
	cursor: inherit;
	font-family: sans-serif;
	font-size: 11px;
	white-space: nowrap;
	text-align: left;
}
.popup>*>*>.content>.root{ width: auto; }

.root ul{ margin: 0; padding: 0; list-style: none; }
.root .node>ul{ display: none; }
.root .node.expanded>ul{ display: list-item; }
.root .node.hidden{ display: none; }

/* pour qu'on puisse toujours cliquer hors des noeud (pour unselect par ex) j'avait mit max-width: 70% sur les noeuds */
.root .node>div{ border: 1px solid transparent; display: block; /*max-width: 70%;*/ }
.root .node>div>.tool{ padding-left: 16px; height: 22px; padding-top: 4px; padding-bottom: 4px; }

.root .node>div>img{ vertical-align: middle; width: 16px; height: 16px; padding-left: 3px; }
.root .node>div.cut>img{ opacity: 0.5; }
.root .node>div>.name{
	cursor: default;
	padding-left: 3px;
	padding-right: 3px;
	display: inline-block; /* pour que first-letter uppercase du menu fonctionne */
	white-space: nowrap; /* pour edition: évite que des espaces puisse changer la largeur du spanspan puisqu'il définit input.width */
}

/*
on peut envisager quelque chose comme au lieu des paddings sur les spans
.node>.icon{ width: 16px; height: 20px; }
.node>.tool{ width: 15px; height: 20px; }
.node>.name{ vertical-align: middle; display: inline-block; }
*/

/* Ceci permet d'éviter le chevauchement des bords des noeuds */
.root .node>div{ position: relative; z-index: 1; margin-top: -1px; }
.root>ul>.node.first>div{ margin-top: 0; }
.root .node.lighted>div{ z-index: 2; }
.root .node.selected>div{ z-index: 3; }
.root .node.focused>div{ z-index: 4; }

.root .node.editing>div>input[type="text"]{
	border-width: 1px;
	border-style: solid;
	font-size: 11px;
	font-family: sans-serif;
	height: 22px;
	overflow: hidden;
	padding: 0 2px;
	position: absolute; z-index: 10; /* pour qu'il passe par dessus span  */
	top: -1px;
}

/* Drag */

.root .node.dragover.before>div:after, .root .node.dragover.after>div:after{
	content: "";
	display: block;
	position: absolute;
	z-index: 10;
	left: 0;
	right: 0;
	border-width: 1px;
	border-style: dotted;
	border-left: none;
	border-right: none;
}

.root .node.dragover.before>div:after{ top: -2px; }
.root .node.dragover.before>div:after{ bottom: -2px; }

.root:-moz-drag-over{
	-webkit-box-shadow: inset 0 0 2px 1px #888;
	-moz-box-shadow:	inset 0 0 2px 1px #888;
	box-shadow:			inset 0 0 2px 1px #888;
}

/* vx */

.root.vx{ background-color: white; }
.root.vx .node.selected>div{ background: none; color: inherit; }
.root.vx .node.selected.expanded>div{ background: none; color: inherit; border-color: transparent; }

.root.vx .node>div{ /*padding-right: 27px; pourquoi faire ça ?*/ /*max-width: 100% !important;*/ }
.root.vx .node>div>.name{ padding-left: 5px; padding-right: 5px; }

/* Compact */

.root.compact .node>div, .root.compact:focus .node>div{ background: none; border-color: transparent; }

.root.compact .node>div{ border: none; }
.root.compact .node>div>.name{ border: 1px solid transparent; }
.root.compact .node.editing>div>input[type="text"]{ top: auto; }

/* une version plus simple:
.root.compact li{ float: left; }
.root.compact ul:after{ content: ""; display: block; clear: both; }
cependant, dans ce cas je pards le fait que le li mesure toute la largeur et déclenche dragover
 */

/* obligé d'utiliser float:left pour avoir un comportement inline mais que margin-top:-1px fonctionne */
.root.compact .node>div{ float: left; }
.root.compact ul{ clear: left; }
.root.compact .node{ clear: left; }
/*.root.compact .node:after{ content: ""; display: block; clear: both; }*/

.root.compact .node.dragover.before>div:after{ top: -1px; border-bottom: none; }
.root.compact .node.dragover.after>div:after{ bottom: -1px; border-top: none; }
