/*---name: swapdescription: Sympa mais pas indispensable: Echange la place de deux noeuds...*/Tree.definePlugin('swap', {	require: 'transform',		init: function(){		this.define('swap', 'method', function(node){			var parent = this.parentNode, index = this.getIndex();			this.exec('move', [node.parentNode, node.getIndex()]);			node.exec('move', [parent, index]);		});		this.define('swap', 'prevent', function(node){			if( !this.can('move', [node.parentNode, node.getIndex()]) ) return false;			if( !node.can('move', [this.parentNode, this.getIndex()]) ) return false;		});		this.define('swap', 'wrapper', function(into){			into = this.tree.getNode(into);			if( !into ) return false;			return [into];		});				if( this.hasPlugin('memory') ){			this.define('swap', 'canceller', function(){ return ['swap', this, arguments]; });		}	}});