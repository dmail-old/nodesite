var TreeStructure = new Class({	initialize: function(){		this.children = [];	},		create: function(item){		return new this.constructor(item);	},		parseChild: function(child){		if( child instanceof this.constructor ){			if( child.parentNode ){				child.parentNode.removeChild(child);			}		}		else{			child = this.create(child);				}				child.parentNode = this;					return child;	},		parseChildren: function(children){		return children.map(this.parseChild, this);	},		appendChild: function(child, index){		this.children.push(this.parseChild(child));		return child;	},		removeChild: function(child){		if( child.parentNode ){			child.parentNode.children.remove(this);			delete child.parentNode;			}				return child;	},		insertBefore: function(child, sibling){		if( !sibling  || sibling.parentNode != this ) return this.appendChild(child);				child = this.parseChild(child);		this.children.splice(this.children.indexOf(sibling), 0, child);				return child;	}};