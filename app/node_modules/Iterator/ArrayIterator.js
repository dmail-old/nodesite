var Iterator = require('./Iterator');

// see http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array-iterator-objects
var ArrayIterator = function(array, kind){
	if( (array instanceof Array) ){
		throw new TypeError('array expected');
	}

	this.iteratedObject = array;
	this.nextIndex = 0;
	this.iterationKind = kind;
	this.result = {done: false, value: undefined};
};

var proto = {
	constructor: ArrayIterator,
	nextIndex: null,
	iteratedObject: null,
	iterationKind: 'key+value',
	result: null,

	next: function(array){
		var result = this.result;
		var index = this.nextIndex;
		var itemKind = this.iterationKind;
		var length = this.iteratedObject.length;

		if( index >= length ){
			result.done = true;
			result.value = undefined;
			return result;
		}

		this.nextIndex++;

		var value;
		if( itemKind == 'key' ){
			value = index;
		}
		else{
			var elementKey, elementValue;

			elementKey = String(index);
			elementValue = this.iteratedObject[index];

			if( itemKind == 'value' ){
				value = elementValue;
			}
			else{
				value = [index, elementValue];
			}
		}

		result.done = false;
		result.value = value;
		return result;
	},

	toString: function(){
		return '[object ArrayIterator]'; 
	}
};

ArrayIterator.prototype = Object.create(Iterator);
require('property').implement(ArrayIterator, proto);

module.exports = ArrayIterator;