/*
Iterator will fail to iterate properly over String because of unicode
And they are often not what we want to use
Its array.prototype.@@iterator & String.prototype.@@iterator the real string/array iterator
And the es6 way to call them is for of, our way will be a forOf polyfill

All of this is useless because forOf dont need this
If I want to iterate over something I could use this but until there is a usecase this file is not necessary

The real polyfill is forOf and @@iterator over Array & String prototype

*/

var Iterator = require('./Iterator');
var ArrayIterator = require('./ArrayIterator');
var StringIterator = require('./StringIterator');

if( typeof global.Iterator == 'function' ){
	global.Iterator = Iterator;

	Object.defineProperty(Array.prototype, '@@iterator', {
		enumerable: false,
		value: ArrayIterator
	});
	Object.defineProperty(String.prototype, '@@iterator', {
		enumerable: false,
		value: StringIterator
	});
	// object have no iterator, to iterate over an object use Iterator(object, true) or use Map, Set object
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map
}

module.exports = {
	Iterator: Iterator,
	ArrayIterator: ArrayIterator,
	StringIterator: StringIterator
};

