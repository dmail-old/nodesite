// sort an array with comparer and return the list of performed affectations
function sortWithAffectations(array, compare){
	var i = 0, j = array.length, pairs = [], pair, affectations = [];

	for(;i<j;i++){
		pairs[i] = [i, array[i]];
	}

	if( typeof compare != 'function' ) compare = function(a, b){ return a < b ? -1 : a > b ? 1 : 0; };

	pairs.sort(function(a, b){
		return compare.call(array, a[1], b[1]);
	});

	i = 0;
	for(;i<j;i++){
		pair = pairs[i];
		affectations.push(pair[0], i);
		array[i] = pair[1];
	}

	return affectations;
}

var AffectationChange = require('../AffectationChange');

module.exports = function(comparer){
	this.delayed = true;
	var affectations = sortWithAffectations(this.array, comparer);
	this.delayed = false;

	this.notify(AffectationChange.new(affectations));

	return this.array;
};