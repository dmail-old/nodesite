/*

name: PropertyAccessor

description: Help to set/get a value at a given path in an object

provides: ObjectPath

var surement extend splitter

*/

var Splitter = require('Splitter');
var PropertyAccessor = Splitter.extend({
	path: null,			// alias of buffer
	firstPart: null,
	lastPart: null,

	init: function(path){
		Splitter.init.call(this, path);
		this.path = path;
		this.split();
	},

	nextPart: function(){
		var part = Splitter.nextPart.call(this);

		if( part ){
			if( this.part ){
				part.previousPart = this.part;
				this.part.nextPart = part;
			}
			if( this.firstPart === null ){
				this.firstPart = part;
			}
			this.lastPart = part;
		}
		
		return part;
	},

	setModel: function(){
		this.firstPart.setModel.apply(this.firstPart, arguments);
		return this;
	},

	unsetModel: function(){
		this.firstPart.unsetModel.apply(this.firstPart, arguments);
		return this;
	},

	has: function(){
		return this.lastPart.has.apply(this.lastPart, arguments);
	},

	apply: function(){
		return this.lastPart.apply.apply(this.lastPart, arguments);
	},

	call: function(){
		return this.lastPart.call.apply(this.lastPart, arguments);
	},

	get value(){
		return this.lastPart.value;
	},

	set value(value){
		return this.lastPart.value = value;
	},

	get model(){
		return this.firstPart.model;
	}
});

module.exports = PropertyAccessor;