/*

if( this.char == '(' && this.next() && this.char == ')' ){
	// token.args = eval('['+ this.buffer.slice(this.index, this.getSeparatorIndex(')'))  +']''); 
	// et faire pareil pour les expression entre []
	// tention: gros problème de sécurité si j'autorise ça coté serveur
	part.args = [];
}

*/

var Splitter = require('Splitter');
var PropertyAccessorSplitter = Splitter.extend({
	cache: {},
	splitters: [
		/\['(.*?)'\]/,
		/\["(.*?)"\]/,
		'.'
	],

	splitParts: function(parts, splitter){
		var i, j, part, subparts;

		i = 0;
		j = parts.length;
		while( i < j ){
			part = parts[i];
			if( typeof part == 'string' ){
				subparts = part.split(splitter);
				parts[i] = subparts;
			}
			else{
				this.splitParts(part, splitter);
			}

			i+= 2;
		}
	},

	splitAll: function(string, splitters){
		var parts, i, j, splitter;
		
		i = 0;
		j = splitters.length;

		parts = string.split(splitters[i]);
		i++;
		while( i < j ){
			splitter = splitters[i];
			this.splitParts(parts, splitter, i, j);
			i++;
		}

		if( j > 1 ){
			parts = parts.flatten();
		}
		
		return parts;
	},

	_split: function(string){
		var parts = this.splitAll(string, this.splitters);

		// vire les parties vides
		parts = parts.map(function(value){
			return value !== '';
		});

		return parts;
	}
});

module.exports = Splitter;