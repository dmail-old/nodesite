/*

name: ObjectPath

description: Help to set/get a value at a given path in an object

provides: ObjectPath

*/

var Lexer = require('./lexer');
var PathPart = require('./pathPart');
var ObjectPath = {
	path: null,
	lexer: Lexer,
	firstPart: null,
	lastPart: null,
	partConstructor: PathPart,

	create: function(path){
		this.path = path;
		this.parse();
	},

	createPart: function(){
		return this.partConstructor.new.apply(this.partConstructor, arguments);
	},

	parse: function(){
		var lexer = this.lexer.new(this.path), token, part = null, previousPart = null;

		while( token = lexer.next() ){
			if( part ){
				previousPart = part;
			}
			part = this.createPart(token.value);
			part.isMethod = token.isMethod;

			if( previousPart ){
				previousPart.nextPart = part;
				part.previousPart = previousPart;
			}
			else{
				this.firstPart = part;
			}
		}

		this.lastPart = part;
	},

	setModel: function(){
		this.firstPart.setModel.apply(this.firstPart, arguments);
		return this;
	},

	unsetModel: function(){
		this.firstPart.unsetModel.apply(this.firstPart, arguments);
		return this;
	},

	get: function(){
		return this.lastPart.get.apply(this.lastPart, arguments);
	},

	set: function(){
		return this.lastPart.set.apply(this.lastPart, arguments);
	},

	apply: function(bind, args){
		var fn = this.get();
		return typeof fn == 'function' ? fn.apply(bind, args) : undefined;
	},

	call: function(bind){
		return this.apply(bind, Array.slice(arguments, 3));
	}
};

Object.defineProperty(ObjectPath, 'model', {
	get: function(){
		return this.firstPart ? this.firstPart.model : null;
	}
});

module.exports = ObjectPath;