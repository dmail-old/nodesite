var Collector = {
	matcher: null,
	matcherBind: null,
	iterator: null,
	iteratorBind: null,
	iteratorSingleReturnValue: true, // return true when value is found is found searching for single value
	iteratorMultipleReturnValue: undefined, // return undefined when value is found searching for multiple values
	single: true,
	value: null,
	result: null,

	get multiple(){
		return this.single;
	},

	set multiple(value){
		if( value ){
			if( this.single === true ){
				this.single = false;
				this.result = [];
				this.handleMatch = this.handleMultipleMatch;
			}
		}
		else{
			if( this.single === false ){
				this.single = true; 
				this.result = null;
				this.handleMatch = this.handleSingleMatch;
			}
		}
	},

	handleMatch: function(value){
		return this.handleSingleMatch(value);
	},

	handleMultipleMatch: function(value){
		this.result.push(value);
		return this.iteratorMultipleReturnValue;
	},

	handleSingleMatch: function(value){
		this.result = value;
		return this.iteratorSingleReturnValue; // break iterator iteration 
	},

	match: function(){
		return this.matcher.call(this.matcherBind);
	},

	onvalue: function(value){
		if( this.match(value) ){
			this.handleMatch(value);
		}
	},

	collect: function(){
		this.iterator.call(this.iteratorBind, this.onvalue, this);
		return this.result;
	}
};

module.exports = Collector;