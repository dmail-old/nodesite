var ObjectPath = require('objectPath/objectPath');
var PartObserver = require('./partObserver');
var PathObserver = ObjectPath.extend({
	partConstructor: PartObserver,
	closed: false,

	create: function(path, model, listener, bind, alias){
		ObjectPath.create.call(this, path);

		if( arguments.length > 1 ){
			this.setModel(model);
			if( arguments.length > 2 && this.lastPart ){
				this.lastPart.listenChange(listener, bind || this, alias);
			}
		}
	},

	close: function(){
		// closing firstPart auto close nextParts
		if( this.firstPart ) this.firstPart.close.apply(this.firstPart, arguments);
		return this;
	}
});

Object.defineProperty(PathObserver, 'lastChange', {
	get: function(){
		return this.lastPart ? this.lastPart.lastChange : null;
	}
});

module.exports = PathObserver;