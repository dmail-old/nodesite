exports['has a firstPart with named user'] = function(test){
	var path = test.imports.new('user.comment.title');

	test.equal(path.firstPart.name, 'user');
	test.done();
};

exports['has a firstPart.nextPart named comment'] = function(test){
	var path = test.imports.new('user.comment.title');

	test.equal(path.firstPart.nextPart.name, 'comment');	
	test.done();
};

exports['has a lastPart named title'] = function(test){
	var path = test.imports.new('user.comment.title');
	
	test.equal(path.lastPart.name, 'title');
	test.done();
};

exports['set the correct model to parts'] = function(test){
	var path = test.imports.new('user.comment.title');
	var model = {
		user: {
			comment: {
				title: 'titre'
			}
		}
	};
	path.setModel(model);

	test.equal(path.firstPart.model, model);
	test.equal(path.firstPart.nextPart.model, model.user);
	test.equal(path.lastPart.model, model.user.comment);
	test.done();
};

exports['read the correct value for parts'] = function(test){
	var path = test.imports.new('user.comment.title');
	var model = {
		user: {
			comment: {
				title: 'titre'
			}
		}
	};
	path.setModel(model);

	test.equal(path.firstPart.value, model.user);
	test.equal(path.firstPart.nextPart.value, model.user.comment);
	test.equal(path.lastPart.value, 'titre');
	test.done();
};

exports['propagate unsetModel'] = function(test){
	var path = test.imports.new('user.comment.title');
	var model = {
		user: {
			comment: {
				title: 'titre'
			}
		}
	};
	path.setModel(model);
	path.unsetModel();

	test.equal(path.firstPart.model, null);
	test.equal(path.lastPart.model, null);
	test.done();
};

exports['set/get the value'] = function(test){
	var path = test.imports.new('user.comment.title');
	var model = {
		user: {
			comment: {
				title: 'titre'
			}
		}
	};
	path.setModel(model);
	path.value = 'coucou';

	test.equal(path.value, 'coucou');
	test.equal(model.user.comment.title, 'coucou');
	test.done();
};