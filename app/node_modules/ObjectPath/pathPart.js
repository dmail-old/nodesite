var PathPart = {
	name: null, // Number|String 
	model: null,
	previousPart: null,
	nextPart: null,
	isMethod: false,
	args: [],

	create: function(name){
		this.name = name;
	},

	setModel: function(model){
		this.unsetModel(true);
		this.model = model;
		this.propagate();
		return this;
	},

	propagate: function(unset){
		if( this.nextPart ){
			if( unset ){
				this.nextPart.unsetModel();
			}
			else{
				this.nextPart.setModel(this.get());
			}
		}
	},

	unsetModel: function(){
		this.propagate(true);
		this.model = null;
		return this;
	},

	set: function(value){
		var model = this.model;

		if( model == null ) return false;
		model[this.name] = value;
		this.propagate();
		return true;					
	},

	get: function(){
		var model = this.model;

		if( model == null ) return undefined;
		if( this.isMethod ) return model[this.name].apply(model, this.args);
		return model[this.name];
	},

	has: function(){
		var model = this.model;

		if( model == null ) return false;
		return this.name in model;	
	},

	hasOwn: function(){
		var model = this.model;

		if( model == null ) return false;
		//if( model.has ) return model.has(this.name);
		return Object.prototype.hasOwnProperty.call(model, this.name);
	}
};

module.exports = PathPart;