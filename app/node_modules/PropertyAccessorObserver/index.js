// https://api.dartlang.org/apidocs/channels/stable/#observe/observe.PathObserver
// on devrais ptet pas apeller ça ObjectPath parce que le model peut être autre chose qu'un objet en fait
// et c'est très centré sur path plus que sur object
// mais path c'est trop général
// property trop précis
// accessor c'est bien mais un peu chiant

// bonne idée: property accessor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Member_Operators

var Path = require('../Path');
var PathObserver = Path.extend({
	partPrototype: require('./partObserver'),
	closed: false,

	init: function(path, model, listener, bind, alias){
		Path.init.call(this, path);

		if( arguments.length > 1 ){
			this.setModel(model);
			if( arguments.length > 2 ){
				this.listenChange(listener, bind || this, alias);
			}
		}
	},

	listenChange: function(){
		this.lastPart.listenChange.apply(this.lastPart, arguments);
		return this;
	},

	close: function(){
		// closing firstPart auto close nextParts
		this.firstPart.close.apply(this.firstPart, arguments);
		return this;
	},

	get lastChange(){
		return this.lastPart.lastChange;
	}
});

module.exports = PathObserver;