/*

*/

var StringTemplate = require('StringTemplate');
var MustacheTemplate = StringTemplate.create({
	CachedPropertyAccessor: require('CachedPropertyAccessor'),

	replaceObject: function(expression, object, index){
		var accessor = this.CachedPropertyAccessor.new(expression).setModel(object), value;

		accessor.setModel(object);

		// dont replace {name} when name does not exists in this
		if( accessor.has() ){
			value = accessor.value;
			return value == null ? '' : value;
		}

		return this.rawExpression(expression);
	}
});

module.exports = MustacheTemplate;