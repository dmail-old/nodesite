/*---name: Array.finddescription: Advanced search against arrayrequire: Object, Selector, Array.prototype.iterateprovides: Array.prototype.find, Array.prototype.findAll, Array.prototype.count...*/var Selector = require('../Selector');var Collector = require('../Collector');var Iterate = require('Array.iterate');module.exports = {	// loop through array testing all items	collectMatch: function(selector, first, direction, from, to){		/*		a speed improvment is possible is we just need to find the item through a number		if( typeof filter == 'number' ){			var value = array[(filter * direction == 'prev' ? -1 : 1) + (from || 0)];			if( typeof value == 'undefined' ) value = null;			return first ? value : [value];		}*/		selector = Selector.new(selector);		var collector = Collector.new();		collector.multiple = !first;		collector.matcher = selector.match;		collector.matcherBind = selector;		collector.iterator = function(push){ Iterate(array, push, this, direction, from, to); };		collector.iteratorBind = this;		return collector.collect();	},	// returns first item satifying selector or null	find: function(selector, direction, from, to){		return this.collectMatch(selector, true, direction, from, to);	},	// returns an array containing all items satifying selector	findAll: function(selector, direction, from, to){		return this.collectMatch(selector, false, direction, from, to);	},	// returns the number of items satisfying at least one arguments	// sauf qu'id√©alement faudrait pouvoir passer en argument from et to aussi ou pas?	count: function(selector){		selector = Selector.new(selector);		var count = 0, i = this.length;				while(i--){			if( selector.match(this[i]) ) count++;		}		return count;	}};Array.implement(module.exports);