var Lexer = require('lexer');

var PartToken = Lexer.Token.extend({
	isMethod: false
});

var PartLexer = Lexer.extend({
	__name__: 'PartLexer',
	specials: '.[]()',
	quote: '"',
	Token: PartToken,
	cache: {},
	
	isQuote: function(char){
		return char == this.quote;
	},

	writeToken: function(token, char){

		// begining of a token
		if( this.isAlphaNum(char) ){
			token.index = this.index;
			token.value = char + this.readAlphaNum();
			if( char == '(' && this.nextChar() == ')' ){
				// token.args = eval('['+ this.buffer.slice(this.index, this.getSeparatorIndex(')'))  +']''); 
				// et faire pareil pour les expression entre []
				// tention: gros problème de sécurité si j'uatorise ça coté serveur
				token.isMethod = true;
			}

			return this.BREAK;
		}

		// begining of a token in quote like ["ok"]
		if( this.isQuote(char) ){
			token.index = this.index;
			token.value = this.readWhile(this.isQuote, false);

			if( token.index != this.index && !this.isQuote(char) ){
				throw this.error('Unterminated quote at ' + token.index);
			}

			return this.BREAK;
		}
	}
});

module.exports = PartLexer;