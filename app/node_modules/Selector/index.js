var SelectorFactory = {
	prototypes: [],

	addPrototype: function(name, prototype){
		var condition = prototype.condition;

		if( !condition ){
			prototype.condition = function(selector){
				return typeof selector == name;
			};
		}

		this.prototypes.push(prototype);
	},

	constructor: function(selector){
		if( this.isPrototypeOf(selector) ) return selector;
		
		var i = 0, j = this.prototypes.length, proto;

		for(;i<j;i++){
			proto = this.prototypes[i];
			if( proto.condition(selector) ){	
				return new proto(selector);
			}
		}

		throw new TypeError(selector + ' is not a valid selector');
	}
};

[
	'boolean',
	'function',
	'number',
	'string',
	'null',
	'array',
	'regExp',
	// keep array null and regexp before object
	'object'
].forEach(function(name){
	SelectorFactory.addPrototype(name, require('./prototypes/' + name));
});

module.exports = SelectorFactory;