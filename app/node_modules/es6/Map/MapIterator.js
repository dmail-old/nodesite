var Iterator = require('../Iterator');
var proto = require('proto');

var MapIterator = proto.extend(Iterator, {
	constructor: function(map, kind){
		this.iteratedObject = map;
		this.nextIndex = 0;
		this.iterationKind = kind || 'key+value';
		this.result = {done: false, value: undefined};
	},

	next: function(array){
		var index = this.nextIndex, map = this.iteratedObject, length = map.size, itemKind;

		if( index >= length ){
			return this.createResult(undefined, true);			
		}

		this.nextIndex++;
		itemKind = this.iterationKind;

		if( itemKind == 'key' ){
			return this.createResult(map._keys[index], false);
		}

		if( itemKind == 'value' ){
			return this.createResult(map._values[index], false);
		}
		
		return this.createResult([map._keys[index], map._values[index]], false);
	},

	toString: function(){
		return '[object Map Iterator]'; 
	}
});

module.exports = MapIterator;