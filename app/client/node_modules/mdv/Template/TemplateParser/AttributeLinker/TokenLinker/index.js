require('Node.bind');
/*

name: TokenLinker
description: link a node attribute to a model value adding a prefix and a suffix
example: <span>Hello {name}!</span>

*/
var DirectLinker = require('./directLinker');
var Observer = require('PropertyAccessorObserver');
var TokenLinker = DirectLinker.extend({
	name: 'TokenLinker',
	prefix: '',
	suffix: '',

	init: function(nodeAttribute, modelPath, prefix, suffix){
		this.nodeAttribute = nodeAttribute;
		this.modelPath = modelPath;
		this.prefix = prefix;
		this.suffix = suffix;
	},

	link: function(node, model){
		var self = this;
		var specificModel = {};
		Observer.new(this.modelPath, model, function(change){
			specificModel.value = self.prefix + change.value + self.suffix;
		});

		// node is binded to specificModel.value wich is updated when pathobserver changes
		node.bind(this.nodeAttribute, specificModel, 'value');
	},

	unlink: function(node){
		node.unbind(this.nodeAttribute);
	}
});

module.exports = TokenLinker;