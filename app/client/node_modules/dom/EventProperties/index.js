var EventProperties = {
	get ctrlKey(){
		return this.control;
	},

	get shiftKey(){
		return this.shift;
	},

	get altKey(){
		return this.alt;
	},

	get metaKey(){
		return this.meta;
	},

	get rightClick(){
		return this.which == 3 || this.button == 2;
	},

	get middleClick(){
		return this.which == 2 || this.code == 2;
	},

	get wheel(){
		if( this.type == 'DOMMouseScroll' || this.type == 'mousewheel' ){
			return this.wheelDelta ? this.wheelDelta / 120 : -(this.detail || 0) / 3;
		}
		return undefined;
	},

	get page(){
		var page = {};

		if( this.touches && this.touches[0] && (this.type.startsWith('touch') || this.type.startsWith('gesture')) ){
			page = {
				x: this.touches[0].pageX,
				y: this.touches[0].pageY
			};
		}
		else if( this.type == 'click' || this.type == 'dblclick' || this.type == 'contextmenu' || this.type == 'DOMMouseScroll' || this.type.startsWith('mouse') ){
			var doc = window.document.compatElement;

			page = {
				x: this.pageX != null ? this.pageX : this.clientX + doc.scrollLeft,
				y: this.pageY != null ? this.pageY : this.clientY + doc.scrollTop
			};
		}

		return page;
	},

	get client(){
		var client;

		if( this.touches && this.touches[0] && (this.type.startsWith('touch') || this.type.startsWith('gesture')) ){
			client = {
				x: this.touches[0].clientX,
				y: this.touches[0].clientY
			};
		}
		else if( this.type == 'click' || this.type == 'dblclick' || this.type == 'contextmenu' || this.type == 'DOMMouseScroll' || this.type.startsWith('mouse') ){
			client = {
				x: this.pageX != null ? this.pageX - window.pageXOffset : this.clientX,
				y: this.pageY != null ? this.pageY - window.pageYOffset : this.clientY
			};
		}

		return client;
	},

	keys: {},

	get key(){
		var code = this.which || this.keyCode, key = this.keys[code];

		if( this.type == 'keydown' || this.type == 'keyup' ){
			if( code > 111 && code < 124 ) key = 'f' + (code - 111);
			else if( code > 95 && code < 106 ) key = code - 96;
		}

		if( key == null ) key = String.fromCharCode(code).toLowerCase();

		return key;
	},

	stop: function(){
		return this.preventDefault().stopPropagation();
	}
};

EventProperties.keys = {
	'8': 'backspace',
	'9': 'tab',
	'13': 'enter',
	'16': 'shift',
	'17': 'ctrl',
	'18': 'alt',
	'20': 'capslock',
	'27': 'esc',
	'32': 'space',
	'33': 'pageup',
	'34': 'pagedown',
	'35': 'end',
	'36': 'home',
	'37': 'left',
	'38': 'up',
	'39': 'right',
	'40': 'down',
	'45': 'insert',
	'46': 'delete',
	'107': '+',
	'144': 'numlock',
	'145': 'scrolllock',
	'186': ';',
	'187': '=',
	'190': '.',
	'222': "'"
};

module.exports = EventProperties;

require('Object.property').implement(Event, EventProperties);