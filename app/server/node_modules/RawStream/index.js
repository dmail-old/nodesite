var ComputedStream = require('computedStream');
var proto = require('proto');

var RawStream = proto.extend(ComputedStream, {
	decoders: require('./decoders'),
	deconverters: require('./deconverters'),

	encoding: 'identity', // encoding used to encode & decode
	charset: 'utf8', // charset used to convert & deconvert	
	outputEncoding: 'indentity', // source encoding
	outputCharset: 'utf8', // source charset


	supportEncoding: function(encoding){
		return encoding in this.decoders;
	},

	supportCharset: function(charset){
		return charset in this.deconverters;
	},

	decode: function(encoding){
		if( encoding != this.encoding ){
			if( this.canDecode(encoding) ){
				this.chain(this.decoders[encoding].call(this));
			}
			else{
				throw new Error('cannot decode ' + encoding );
			}
		}
	},

	deconvert: function(charset){
		if( charset != this.charset ){
			if( this.canDeconvert(charset) ){
				this.chain(this.deconverters[charset].call(this));
			}
			else{
				throw new Error('cannot deconvert  ' + charset);
			}
		}
	},

	_resolve: function(){
		this.decode(this.encoding);	
		this.deconvert(this.charset);
		return ComputedStream.prototype._resolve.call(this);
	}
});

module.exports = RawStream;