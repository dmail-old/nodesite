var ComputedStream = require('computedStream');
var ProcessedStream = ComputedStream.create({
	encoders: require('./encoders'),
	converters: require('./converters'),

	sourceEncoding: 'identity',
	sourceCharset: 'utf8',
	encoding: 'identity',
	charset: 'utf8',

	init: function(){
		
	},

	supportEncoding: function(encoding){
		return encoding in this.encoders;
	},

	supportCharset: function(charset){
		return charset in this.converters;
	},

	encode: function(encoding){
		if( encoding != this.encoding ){
			if( this.canEncode(encoding) ){
				this.chain(this.encoders[encoding].call(this));
			}
			else{
				throw new Error('cannot encode ' + encoding);
			}
		}
	},

	convert: function(charset){
		if( charset != this.charset ){
			if( this.canConvert(charset) ){
				this.chain(this.converters[charset].call(this));
			}
			else{
				throw new Error('cannot convert  ' + charset);
			}
		}
	},

	_resolve: function(){
		this.encode(this.encoding);
		this.convert(this.charset);
		return ComputedStream._resolve.call(this);
	}
});

module.exports = ProcessedStream;