var proto = require('proto');

var File = proto.extend(require('./File'), {
	fileSystem: require('Router').prototype.RequestHandler.prototype.fileSystem
});
//File.prototype.aliases.push(require('./GzipAlias'));

module.exports = {
	name: 'file',
	requires: 'requestNegotiation',

	response: {
		modifiedSinceHeaderName: 'if-modified-since',

		sendFile: function(path){
			var file = File.new(path);

			var modifiedSince = this.request.getHeader(this.modifiedSinceHeaderName);
			if( typeof modifiedSince === 'string' ){
				try{
					file.modifiedSince = new Date(modifiedSince);
				}
				catch(e){
					console.warn('bad if-modified-since header value');
				}
			}
			file.acceptGzip = this.request.accept('encoding', 'gzip');

			file.generate(function(error, result){
				if( error ){
					this.error(error);
				}
				else{
					this.send(result);
				}
			}, this);
		}
	},

	use: function(router, path){
		router.RequestHandler.prototype.filePath = path;
	},

	// this here is router not FileHandler
	handle: function(request, response, handler){
		if( request.is('head', 'get') ){
			response.sendFile(handler.filePath + request.url.pathname);
		}
		else{
			handler.next();
		}
	}
};