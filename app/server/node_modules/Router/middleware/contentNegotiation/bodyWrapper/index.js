module.exports = {
	wrapped: false,

	response: {
		wrapBody: function(prefix, suffix, encoding){
			if( this.wrapped ) throw new Error('wrap can only be called once');
			this.wrapped = true;
			this.prefix = prefix;
			this.suffix = suffix;

			var serverResponse = this.serverResponse, write, end, setHeader;

			// first stream.write() will write prefix before data
			write = serverResponse.write;
			serverResponse.write = function(){
				this.write = write;
				this.write(prefix, encoding);
				return this.write.apply(this, arguments);
			};
			
			// first stream.end() will write suffix before ending stream
			end = serverResponse.end;
			serverResponse.end = function(){
				this.end = end;
				if( arguments.length > 0 ) this.write.apply(this, arguments);
				return this.end(suffix, encoding, arguments[2]);
			};

			setHeader = this.setHeader;
			this.setHeader = function(name, value){
				if( name == 'content-length' ){
					value+= this.computeLength(prefix);
					value+= this.computeLength(suffix);
					this.setHeader = setHeader;
				}
				return this.setHeader.apply(this, arguments);
			};
		}
	}
};