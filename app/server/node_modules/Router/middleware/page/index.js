/*

MORE: 

getArguments: faudrait vérifier à la manière que global.applyScript la longeur des arguments passées / au handler

*/

module.exports = {
	Page: require('./Page'),

	response: {
		sendPage: function(path){
			var page = this.Page.new(this.handler, path);
			
			page.generate(function(error, body){
				// module not found, module source error, authorization error or page source error
				if( error ){
					this.emit('error', error);
				}
				else{
					// default text/html
					if( false === this.hasHeader('content-type') ){
						this.setHeader('content-type', 'text/html');
					}

					this.send({
						body: body
					});					
				}
			}, this);
		}
	},

	Resolver: require('./PageResolver'),

	handle: function(request, response, handler){
		var resolver = this.Resolver.new(request.url.pathname, global.CLIENT_PATH);

		response.Page = this.Page;
		resolver.resolve(function(error, filename){
			if( filename ){
				// redirect all non ajax page request to app.page
				if( request.isAjax() === false ){
					filename = 'app.page';
				}
				response.sendPage(global.CLIENT_PATH + '/' + filename);
			}
			else{
				handler.next();
			}
		});
	}
};