/*

MORE:

getArguments: faudrait vérifier à la manière que global.applyScript la longeur des arguments passées / au handler

*/

module.exports = {
	name: 'page',
	Page: require('./Page'),

	response: {
		generatePageResponse: function(path){
			var page = new this.Page(this.handler, path);

			return page.generate().then(function(body){
				var response = {};

				response.body = body;
				// default text/html
				if( false === this.hasHeader('content-type') ){
					response.headers = {
						'content-type': 'text/html'
					};
				}

				return response;
			}.bind(this)).catch(function(error){
				if( error && error.code == 'MODULE_NOT_FOUND' ) return 404;
				return Promise.reject(error);
			});
		},

		sendPage: function(path){
			return this.send(this.generatePageResponse(path));
		}
	},

	Resolver: require('./PageResolver'),

	handle: function(request, response){
		response.Page = this.Page;

		var resolver = this.Resolver.new(request.url.pathname, global.CLIENT_PATH);

		return resolver.resolve().then(function(filename){
			// redirect all non ajax page request to app.page
			if( request.isAjax() === false ) return 'app.page';
			return filename;
		}).then(function(filename){
			return response.generatePageResponse(global.CLIENT_PATH + '/' + filename);
		});
	}
};