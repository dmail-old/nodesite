var RequireContext = require('./RequireContext');

var headers = {
	module: 'x-module',
	resolve: 'x-resolve',
	resolveParent: 'x-resolve-parent'
};

module.exports = {
	name: 'module',
	RequireContext: RequireContext,

	handle: function(request, response, handler){
		var Path = require('path'), requireContext;

		if( request.hasHeader(headers.resolve) ){
			path = request.getHeader(headers.resolveParent);
			path = Path.resolve(path, global.CLIENT_PATH);
			var requirePath = request.getHeader(headers.resolve);

			requireContext = new RequireContext(path);

			requireContext.resolve(requirePath).then(
				function(filename){
					var blacklisted = false;

					if( blacklisted ){
						response.statusCode = 503; // unauthorized
						response.end();
					}
					else{
						var relativePath = Path.relative(global.CLIENT_PATH, filename);
						relativePath = relativePath.replace(/\\/g, '/');
						response.end(relativePath);
					}
				},
				function(error){
					if( error && error.code === 'MODULE_NOT_FOUND' ){
						response.statusCode = 404;
						response.end();
					}
					else{
						handler.next(error);
					}
				}
			);
		}
		else if( request.hasHeader(headers.module) ){
			path = request.getHeader(headers.module);
			var modulePath = Path.resolve(global.CLIENT_PATH, path);

			/*
			on demande un module, s'il n'est pas dans une blacklist on l'envoit
			en mode debug on enverra 503 pour indiquer que c'est pas autoris√©
			en mode normal 404 pour pas que le client sache si le module existe ou pas
			*/
			var blacklisted = false;

			if( blacklisted ){
				response.statusCode = 503; // unauthorized
				response.end();
			}
			else{
				response.sendFile(modulePath);
			}
		}
		else{
			handler.next();
		}
	},

	use: function(router, options){
		if( options ){
			if( options.rootFolder ){
				RequireContext.prototype.rootFolder = options.rootFolder;
			}
			if( options.clientFolder ){
				RequireContext.prototype.publicFolder = options.clientFolder;
			}
		}
	}
};