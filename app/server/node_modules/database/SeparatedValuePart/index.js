/*
https://github.com/mcavage/node-restify/blob/master/lib/plugins/fielded_text_body_parser.js
http://stackoverflow.com/a/12785546/1685418


la première partie peut être des headers, faut donc un splitter spécial pour ces parties

*/

Splitter.indexOfPartEnd = function(){

	var quoting = false, escaping = false;

	while( this.next() ){
		// si on escape bah on tient pas compte du prochain carac
		if( escaping ){
			escaping = false;
		}
		// indique qu'on escape le prochain carac
		else if( this.char == this.escape ){
			escaping = true;
		}
		// indique qu'on commence ou termine une quote
		else if( this.char == this.quote ){
			if( quoting ) quoting = false;
			else quoting = this.index;
		}
		// rien à faire
		else if( quoting ){

		}
		// fin de ligne
		else if( this.char == this.separator ){
			break;
		}
	}

	if( typeof quoting == 'number' ){
		throw new Error('unterminated quote at' + quoting);
	}

	return this.index;
};

var Part = require('../FileTemplate/Part');
var SeparatedValuePart = Part.extend({
	delimiter: ',', // could be '\t'
	escape: '\\',
	quote: '"', // could be "'"
	headers: null,

	parse: function(string){
		// c'est pas aussi simple mais en gros c'est ça
		return string.split(this.delimiter);
	},

	stringify: function(object){
		if( !(object instanceof Array) ){
			var keys = Object.getOwnPropertyNames(object), i = 0, j = keys.length, values = [];

			for(;i<j;i++){
				values.push(object[keys[i]]);
			}

			object = values;
		}

		// c'est pas aussi simple mais en gros c'est ça
		return object.join(this.delimiter);
	},

	get item(){
		if( this.headers ){
			var values = this.object, i = 0, j = this.values.length, object = {};

			for(;i<j;i++){
				object[this.headers[i]] = values[i];
			}

			return object;
		}
		else{
			return this.object;
		}
	}
});

module.exports = SeparatedValuePart;