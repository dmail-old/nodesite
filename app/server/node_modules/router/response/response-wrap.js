var proto = require('proto');
var stream = require('stream');
var Transform = stream.Transform;
var debug = require('debug');

var WrapStream = proto.extend(Transform, {
	prefixed: false,
	prefix: null,
	suffix: null,
	prefixEncoding: 'utf8',
	suffixEncoding: 'utf8',

	constructor: function(options){
		Transform.call(this, options);
	},

	pushPrefix: function(){
		if( this.prefix !== null && this.prefixed === false ){
			this.prefixed = true;
			this.push(this.prefix, this.prefixEncoding);
		}
	},

	_write: function(chunk, encoding, done){
		if( typeof chunk != 'string' && !Buffer.isBuffer(chunk) ){
			chunk = Object.toSource(chunk);
		}

		this.pushPrefix();
		this.push(chunk, encoding);
		done();
	},

	_flush: function(done){
		this.pushPrefix();
		if( this.suffix !== null ){
			this.write(this.suffix, this.suffixEncoding);
		}
		done();
	}
});

module.exports = {
	name: 'response-wrap',

	task: function(){
		if( this.prefix || this.suffix ){
			debug('wrapping response stream');

			var wrapStream = new WrapStream();

			wrapStream.prefix = this.prefix;
			wrapStream.suffix = this.suffix;

			this.transform(wrapStream);
		}
	}
};