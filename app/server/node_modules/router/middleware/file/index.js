require('object/assign');
var proto = require('proto');
var debug = require('debug');
var File = require('./File');
//File.prototype.aliases.push(require('./GzipAlias'));

module.exports = {
	name: 'file',

	properties: {
		filePath: null,
		modifiedSinceHeaderName: 'if-modified-since',

		createFilePromise: function(path, options){
			var file = File.create(path);
			Object.assign(file, options);
			return file.createPromise();
		}
	},

	use: function(router, path){
		router.RequestHandler.filePath = path;
	},

	task: function(handler){
		var request = handler.request;

		if( request.is('head', 'get') ){
			var options = {
				fileSystem: handler.fileSystem,
				acceptGzip: request.accept('encoding', 'gzip')
			};

			if( request.hasHeader(handler.modifiedSinceHeaderName) ){
				options.modifiedSince = request.getHeader(handler.modifiedSinceHeaderName);
				try{
					options.modifiedSince = new Date(options.modifiedSince);
				}
				catch(e){
					return 400; // bad request (if modified since header malformed)
				}
			}

			return handler.createFilePromise(handler.filePath + request.url.pathname, options);
		}
	}
};